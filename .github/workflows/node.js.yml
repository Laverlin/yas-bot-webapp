# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3

    - uses: paulhatch/semantic-version@v5.1.0
      id: semver
      with:
        tag_prefix: "v"
        major_pattern: "(MAJOR)"
        minor_pattern: "(MINOR)"
        search_commit_body: true
        # A string to determine the format of the version output
        # version_format: "${major}.${minor}.${patch}-prerelease${increment}"
        version_format: "${major}.${minor}.${patch}+${increment}"

        # If this is set to true, *every* commit will be treated as a new version.
        bump_each_commit: false

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present

    # - name: Upload a Build Artifact
    #   uses: actions/upload-artifact@v3.1.3
    #   with:
    #     # Artifact name
    #     name: build # optional, default is artifact
    #     # A file, directory or wildcard pattern that describes what to upload
    #     path: ${{ github.workspace }}/build


    - name: zip results
      run: zip -r ${{ github.workspace }}/build-${{ steps.semver.outputs.version_tag }}.zip ${{ github.workspace }}/build

    - name: Create a Release
      id: create_release
      uses: shogo82148/actions-create-release@v1
      with:
        tag_name: ${{ steps.semver.outputs.version_tag }}

  # A release created by shogo82148/actions-create-release is alway draft here.
  # So users may not see an empty release.

    - name: Upload Assets
      uses: shogo82148/actions-upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/build-${{ steps.semver.outputs.version_tag }}.zip
        asset_name: "build"


    # - name: Release
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     files: ${{ github.workspace }}/build

    - name: Create Tag
      run: |
        if [[ -z $(git tag -l "${{ steps.semver.outputs.version_tag }}") ]]; then
          git tag ${{ steps.semver.outputs.version_tag }}
          git push origin ${{ steps.semver.outputs.version_tag }}
        fi
